Basic commands/Queries
dbo...... 
with [....] escaped special words

CREATE DATABASE Employees
*******

CREATE TABLE People
(
  Id int NOT NULL,
  Email varchar(50) NOT NULL,
  FirstName varchar(50),
  LastName varchar(50)
)

***
SELECT * FROM Employees

SELECT TOP (5) FirstName, LastName
FROM Employees
***
PROPERTIES

Primary Key

Id INT NOT NULL PRIMARY KEY

Identity (auto-increment)

Id INT NOT NULL PRIMARY KEY

Unique constraint – no repeating values in entire table
Email VARCHAR(50) UNIQUE
***
Default value – if not specified (otherwise set to NULL)

Balance DECIMAL(10,2) DEFAULT 0

Value constraint

Kelvin DECIMAL(10,2) CHECK (Kelvin > 0)
***
Changed table =>

ALTER TABLE Employees

ALTER TABLE Employees
ADD Salary DECIMAL(15, 2)

Delete
ALTER TABLE People
DROP COLUMN FullName

Modify data type of existing column
ALTER TABLE PeopleALTER COLUMN Email VARCHAR(100)

***
Add primary key to existing column
ALTER TABLE PeopleADD CONSTRAINT PK_Id
PRIMARY KEY (Id)

Add unique constraint
ALTER TABLE PeopleADD CONSTRAINT uq_Email
UNIQUE (Email)

ALTER TABLE PeopleADD DEFAULT 0
FOR Balance

ALTER TABLE InstrumentReadingsADD CONSTRAINT PositiveValue
CHECK (Kelvin > 0)

***
Deleting Data and Structures

Dell all records from table
TRUNCATE TABLE Employees

Dell all records from table + structure
DROP TABLE Employees

Drop entıre database
DROP DATABASE AMS


ALTER TABLE EmployeesDROP CONSTRAINT PK_Id
ALTER TABLE EmployeesALTER COLUMN Clients
DROP DEFAULT

***
from lab => 

[Id is use to indexeted records and to connect diffrent table => key and foreign key]

CREATE TABLE Clients (
	Id INT PRIMARY KEY IDENTITY,
	FirstName NVARCHAR(50) NOT NULL,
	LastName NVARCHAR(50) NOT NULL
)

CREATE TABLE AccountTypes (
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(50) NOT NULL
)

[Important: Don’t forget to select the query you want to run before clicking Execute (F5) if you have multiple queries!]

CREATE TABLE Accounts (
	Id INT PRIMARY KEY IDENTITY,
	AccountTypeId INT FOREIGN KEY REFERENCES AccountTypes(Id),
	Balance DECIMAL(15, 2) NOT NULL DEFAULT(0),
	ClientId INT FOREIGN KEY REFERENCES Clients(Id)
)

INSERT INTO Clients (FirstName, LastName) VALUES
('Gosho', 'Ivanov'),
('Pesho', 'Petrov'),
('Ivan', 'Iliev'),
('Merry', 'Ivanova')

INSERT INTO AccountTypes (Name) VALUES
('Checking'),
('Savings')

INSERT INTO Accounts (ClientId, AccountTypeId, Balance) VALUES
(1, 1, 175),
(2, 1, 275.56),
(3, 1, 138.01),
(4, 1, 40.30),
(4, 2, 375.50)

Create Function =>

CREATE FUNCTION f_CalculateTotalBalance (@ClientID INT)
RETURNS DECIMAL(15, 2)
BEGIN
	DECLARE @result AS DECIMAL(15, 2) = (
	  SELECT SUM(Balance) 
	  FROM Accounts WHERE ClientId = @ClientID
	)	
  RETURN @result
END

SELECT dbo.f_CalculateTotalBalance(4) AS Balance   

[with AS given Name of new column]


Create Procedures => 

CREATE PROC p_AddAccount @ClientId INT, @AccountTypeId INT AS
INSERT INTO Accounts (ClientId, AccountTypeId) 
VALUES (@ClientId, @AccountTypeId)

p_AddAccount 2, 2

SELECT * FROM Accounts


CREATE PROC p_Deposit @AccountId INT, @Amount DECIMAL(15, 2) AS
UPDATE Accounts
SET Balance += @Amount
WHERE Id = @AccountId


CREATE PROC p_Withdraw @AccountId INT, @Amount DECIMAL(15, 2) AS
BEGIN
	DECLARE @OldBalance DECIMAL(15, 2)
	SELECT @OldBalance = Balance FROM Accounts WHERE Id = @AccountId
	IF (@OldBalance - @Amount >= 0)
	BEGIN
		UPDATE Accounts
		SET Balance -= @Amount
		WHERE Id = @AccountId
	END
	ELSE
	BEGIN
		RAISERROR('Insufficient funds', 10, 1)
	END
END


CREATE TABLE Transactions (
	Id INT PRIMARY KEY IDENTITY,
	AccountId INT FOREIGN KEY REFERENCES Accounts(Id),
	OldBalance DECIMAL(15, 2) NOT NULL,
	NewBalance DECIMAL(15, 2) NOT NULL,
	Amount AS NewBalance - OldBalance,
	[DateTime] DATETIME2
)


CREATE TRIGGER tr_Transaction ON Accounts
AFTER UPDATE
AS
	INSERT INTO Transactions (AccountId, OldBalance, NewBalance, [DateTime])
	SELECT inserted.Id, deleted.Balance, inserted.Balance, GETDATE() FROM inserted
	JOIN deleted ON inserted.Id = deleted.Id


p_Deposit 1, 25.00
GO

p_Deposit 1, 40.00
GO

p_Withdraw 2, 200.00
GO

p_Deposit 4, 180.00
GO

SELECT * FROM Transactions

***
