  select COUNT(*) AS [Count]
  FROM WizzardDeposits
  
   select MAX(MagicWandSize) AS [LongestMagicWand]
  FROM WizzardDeposits
  
  
   select DepositGroup, MAX(MagicWandSize)
         AS [LongestMagicWand]
  FROM WizzardDeposits
  GROUP BY DepositGroup
  
  
  SELECT TOP(2) DepositGroup
 FROM WizzardDeposits
 GROUP BY DepositGroup
ORDER BY AVG(MagicWandSize)


SELECT DepositGroup,
       SUM(DEPOSITAMOUNT)
 FROM WizzardDeposits
 GROUP BY DepositGroup
 
 
 SELECT DepositGroup,
       SUM(DEPOSITAMOUNT) AS [TotalSum]
 FROM WizzardDeposits
 WHERE MagicWandCreator = 'Ollivander family'
 GROUP BY DepositGroup
 
 
 SELECT DepositGroup,
       SUM(DEPOSITAMOUNT) AS [TotalSum]
 FROM WizzardDeposits
 WHERE MagicWandCreator = 'Ollivander family'
 GROUP BY DepositGroup
 HAVING SUM(DepositAmount)<150000
 ORDER BY TotalSum DESC
 
 
 SELECT DepositGroup,
       MagicWandCreator,
       MIN(DepositCharge) AS [MinDepositCharge]
 FROM WizzardDeposits
 GROUP BY DepositGroup,
          MagicWandCreator
		  
		  SELECT CASE
       WHEN w.Age BETWEEN 0 AND 10 THEN  '[0-10]'
	   WHEN w.Age BETWEEN 11 AND 20 THEN '[11-20]'
       WHEN w.Age BETWEEN 21 AND 30 THEN '[21-30]'
       WHEN w.Age BETWEEN 31 AND 40 THEN '[31-40]'
       WHEN w.Age BETWEEN 41 AND 50 THEN '[41-50]'
       WHEN w.Age BETWEEN 51 AND 60 THEN '[51-60]'
       WHEN w.Age >=61 THEN '[60+]'
	   ELSE 'N\A'
    END AS AgeGroup,
	COUNT(*) AS WizzardsCount
FROM WizzardDeposits AS w
GROUP BY CASE
       WHEN w.Age BETWEEN 0 AND 10 THEN  '[0-10]'
	   WHEN w.Age BETWEEN 11 AND 20 THEN '[11-20]'
       WHEN w.Age BETWEEN 21 AND 30 THEN '[21-30]'
       WHEN w.Age BETWEEN 31 AND 40 THEN '[31-40]'
       WHEN w.Age BETWEEN 41 AND 50 THEN '[41-50]'
       WHEN w.Age BETWEEN 51 AND 60 THEN '[51-60]'
       WHEN w.Age >=61 THEN '[60+]'
	   ELSE 'N\A'
	   END
	   
	   
	   SELECT LEFT(FirstName,1) AS [FirstLetter]
 FROM WizzardDeposits
 WHERE DepositGroup = 'Troll Chest'
 GROUP BY LEFT(FirstName,1)
 ORDER BY FirstLetter
 
 
 SELECT DepositGroup,
       IsDepositExpired,
	   AVG(DEPOSITINTEREST)
 FROM WizzardDeposits
 WHERE DepositStartDate > '01/01/1985'

 GROUP BY DepositGroup,
          IsDepositExpired
 ORDER BY DepositGroup DESC,
          IsDepositExpired
		  
		  
		  SELECT ABS(SUM(ww.DIFFERENCE))
FROM
(
      SELECT DepositAmount - 
           (SELECT DepositAmount  FROM WizzardDeposits AS wsd WHERE ws.Id = wsd.Id+1 )
  	     AS DIFFERENCE
      FROM WizzardDeposits AS ws
 ) AS ww
 
 SELECT DepartmentID
       ,SUM(Salary)
  FROM Employees
  GROUP BY DepartmentID
  
  SELECT DepartmentID
       ,MIN(Salary)
  FROM Employees
  WHERE DepartmentID IN(2, 5, 7) AND HireDate > '01/01/2000'
  GROUP BY DepartmentID
  
  --Select all employees who earn more than 30000 into a new table
SELECT *
  INTO NewTable
 FROM Employees
 WHERE Salary > 30000
 --delete all employees who have ManagerID = 42 (in the new table).
 DELETE 
   FROM NewTable
  WHERE ManagerID = 42
 --Then increase the salaries of all employees with DepartmentID=1 by 5000 NEW
  UPDATE NewTable
     SET Salary+=5000
   WHERE DepartmentID = 1
 --average salaries in each department.
   SELECT DepartmentID,
          AVG(Salary) AS AverageSalary
    FROM NewTable
GROUP BY DepartmentID


  SELECT DepartmentID,
         MAX(SALARY) AS MaxSalary
  FROM Employees
  GROUP BY DepartmentID
  HAVING MAX(Salary) NOT BETWEEN 30000 AND 70000
  
  
    SELECT COUNT(SALARY) 
  FROM Employees
  WHERE ManagerID IS NULL
  
     SELECT Salaries.DepartmentID,
          Salaries.Salary	
   FROM
   (
         SELECT DepartmentID,
		        Salary,
		  DENSE_RANK() OVER(PARTITION BY DepartmentID ORDER BY Salary DESC) AS Rank
		  FROM Employees
		  GROUP BY DepartmentID,
		           Salary
   ) AS Salaries
   WHERE Rank = 3
   GROUP BY Salaries.DepartmentID,
            Salaries.Salary
  
    SELECT TOP(10) FirstName
         ,LastName
		 ,DepartmentID 
  FROM Employees AS e
  WHERE Salary >
  (
      SELECT AVG(Salary)
	  FROM Employees AS em
	  WHERE e.DepartmentID = em.DepartmentID
  )
  
  
