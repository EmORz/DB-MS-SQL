--/In the newly created database Minions add table Minions (Id, Name, Age). 
--Then add new table Towns (Id, Name). Set Id columns of both tables to be primary key as
-- constraint.

CREATE DATABASE Minions;

Use Minions;



CREATE TABLE Minions (
	Id INT PRIMARY KEY NOT NULL,
	[Name] NVARCHAR(50) NOT NULL,
	Age INT 
)

CREATE TABLE Towns (
	Id INT PRIMARY KEY NOT NULL,
	[Name] NVARCHAR(50) NOT NULL,
)

ALTER TABLE Minions
ADD TownId INT FOREIGN KEY REFERENCES Towns(Id) NOT NULL;
--Change the structure of the Minions table to have new column TownId that would be of the same type as the Id column of Towns table. 
--Add new constraint that makes TownId foreign key and references to Id column of Towns table.

INSERT INTO Towns(Id, [Name]) VALUES
(1,'Sofia'),
(2, 'Plovdiv'),
(3, 'Varna')


INSERT INTO Minions(Id, [Name], Age, TownId) VALUES
(1, 'Kevin', 22, 1),
(2, 'Bob', 15, 3),
(3, 'Steward', NULL, 2)

SELECT * FROM Minions


TRUNCATE TABLE Minions;

DROP TABLE Minions;

DROP TABLE Towns;
***
CREATE TABLE People(
   
   Id INT UNIQUE NOT NULL IDENTITY,
   [Name] NVARCHAR(200) NOT NULL,
   Picture VARBINARY(MAX),
   Height NUMERIC(3, 2),
   [Weight] Numeric(5, 2),
   Gender CHAR(1) CHECK([Gender] IN('M', 'F')) NOT NULL,
   Birthdate DATE NOT NULL,
   Biography NVARCHAR(MAX)
)

ALTER TABLE People
ADD PRIMARY KEY (Id)


INSERT INTO People([Name], Gender, Birthdate) VALUES
('FIRST NAME', 'M', '01-01-2000'),
('SECOND NAME', 'F', '02-01-2001'),
('THIRD NAME', 'M', '01-02-2002'),
('FORTH NAME', 'F', '02-02-2022'),
('FIFTH NAME', 'M', '04-03-2025')
***
CREATE TABLE Users(
	  Id INT UNIQUE NOT NULL IDENTITY,
	  Username NVARCHAR(30) UNIQUE NOT NULL,
	  [Password] NVARCHAR(26) NOT NULL,
	  ProfilePicture VARBINARY(MAX),
	  LastLoginTime  DATETIME2,
	  IsDeleted BIT NOT NULL DEFAULT(0)
)


ALTER TABLE Users
ADD PRIMARY KEY (Id)

INSERT INTO Users(Username, [Password]) VALUES
('FIRST NAME', '123'),
('SECOND NAME', '213'),
('THIRD NAME', '852'),
('FORTH NAME', '459'),
('FIFTH NAME', '753')
***
ALTER TABLE Users DROP CONSTRAINT PK__Users__3214EC07AA5CF123

ALTER TABLE Users
ADD CONSTRAINT PK_Users PRIMARY KEY (Id, Username)

***
ALTER TABLE Users
ADD CONSTRAINT DF_Users DEFAULT GETDATE() FOR [LastLoginTime]
****

  ALTER TABLE Users
  ADD CONSTRAINT PK_Users PRIMARY KEY (Id, Username)

  ALTER TABLE Users
  DROP CONSTRAINT PK_Users

  ALTER TABLE Users
  ADD CONSTRAINT PK_Users PRIMARY KEY(Id)

  ALTER TABLE Users
  ADD CONSTRAINT UC_Users UNIQUE(Username)

  ALTER TABLE Users
  ADD CONSTRAINT CHK_Users CHECK(LEN(Username)>=3)

ALTER TABLE Users
ADD CONSTRAINT [Password] CHECK(LEN([Password]) >= 2)

  TRUNCATE TABLE Users
  SELECT * FROM Users
INSERT INTO Users(Username, [Password]) VALUES
('FIRSTNAME', '122223'),
('SECONDNAME','222213'),
('THIRDNAME', '822252'),
('FORTHNAME', '422259'),
('FIFTHNAME', '722253')


ALTER TABLE Users
ADD CONSTRAINT DF_Users DEFAULT GETDATE() FOR [LastLoginTime]
***

--Using SQL queries create Movies database with 
CREATE DATABASE Movies
--  with the following entities:
--	Directors (Id, DirectorName, Notes)
--	Genres (Id, GenreName, Notes)
--	Categories (Id, CategoryName, Notes)
--	Movies (Id, Title, DirectorId, CopyrightYear, Length, GenreId, CategoryId, Rating, Notes)

USE Movies
--	Directors (Id, DirectorName, Notes)
-- Set primary key to each 
CREATE TABLE Directors(
	Id INT PRIMARY KEY NOT NULL,
	DirectorName NVARCHAR(50) NOT NULL,
	Notes NVARCHAR(MAX)
)
-- INSERT
INSERT INTO Directors(Id, DirectorName)
VALUES
(1, 'DIRECTOR ONE'),
(2, 'DIRECTOR TWO'),
(3, 'DIRECTOR THREE'),
(4, 'DIRECTOR FOUR'),
(5, 'DIRECTOR FIVE')
--	Genres (Id, GenreName, Notes)
CREATE TABLE Genres(
	Id INT PRIMARY KEY NOT NULL,
	GenreName NVARCHAR(50) NOT NULL,
	Notes NVARCHAR(MAX)
)
-- INSERT
INSERT INTO Genres(Id, GenreName)
VALUES
(1, 'GENRE ONE'),
(2, 'GENRE TWO'),
(3, 'GENRE THREE'),
(4, 'GENRE FOUR'),
(5, 'GENRE FIVE')
--	Categories (Id, CategoryName, Notes)
CREATE TABLE Categories(
	Id INT PRIMARY KEY NOT NULL,
	CategoryName NVARCHAR(50) NOT NULL,
	Notes NVARCHAR(MAX)
)
-- INSERT
INSERT INTO Categories(Id, CategoryName)
VALUES
(1, 'CATEGORIES ONE'),
(2, 'CATEGORIES TWO'),
(3, 'CATEGORIES THREE'),
(4, 'CATEGORIES FOUR'),
(5, 'CATEGORIES FIVE')
--	Movies (Id, Title, DirectorId, CopyrightYear, Length, GenreId, CategoryId, Rating, Notes)
CREATE TABLE Movies(
	Id INT PRIMARY KEY NOT NULL,
	Title NVARCHAR(255) NOT NULL,
	DirectorId INT FOREIGN KEY REFERENCES Directors(Id),
	CopyrightYear INT,
	Lenght NVARCHAR(50),
	GenreId INT FOREIGN KEY REFERENCES Genres(Id),
	CategoryId INT FOREIGN KEY REFERENCES Categories(Id),
	Rating INT,
	Notes NVARCHAR(MAX)
)
-- INSERT
INSERT INTO Movies(Id, Title, DirectorId, GenreId, CategoryId)
VALUES
(1, 'Title ONE', 2, 3, 4),
(2, 'Title TWO', 3, 4, 5),
(3, 'Title THREE', 1, 2, 3),
(4, 'Title FOUR', 5, 1, 3),
(5, 'Title FIVE', 3, 5, 2)
